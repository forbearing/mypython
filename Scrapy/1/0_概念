1:“大数据时代”，数据获取的方式：
	1:企业生产的用户数据：大型互联网公司有海量用户，所以他们积累数据有天然优势
	2:有数据意识的中小型企业，也开始积累数据
	3:数据管理咨询公司
		通常这样的公司有很庞大的数据采集团队，一般会通过市场调研、问卷调查、固定的样本检测
		和各行各业公司进行合作、专家对话（数据积累了很多年了，最后得出科研结果）
	4:政府/机构提供的公开数据
		政府通过各地政府统计上报的数据进行合计，机构都是权威的第三方网站
	5:第三方数据平台购买数据
		通过各个数据交易平台来购买各行各业需求的数据，根据获取难度的不同，价格也会不同。
	6:爬虫爬取数据
		如果市场上没有我们需要的数据，或者价格太高不愿意买那么就可以招聘一个爬虫工程师，
		从互联网上定向采集数据。

2:相关网站
	互联网指数
		index.baidu.com
		alizs.taobao.com/area
		data.weibo.com/index
	政府机构数据
		data.stats.gov.cn
		data.worldbank.org.cn
		www.nasdaq.com/zh
		data.un.org
	数据管理咨询公司
		www.iresearch.com.cn
		www.mckinsey.com.cn
	第三方数据市场
		数据堂				www.datatang.com
		国云数据市场
		贵阳大数据交易所	trade.gbdex.com

3:爬虫
	1:爬虫：抓去网页数据的程序
	2:爬虫怎么抓去网页数据
		1:网页三大特征：
			- 每个网页都有自己惟一
			- 的 URI（统一资源定位符）来进行定位。
			- 网页都适用 HTML 
			- 网页都使用 HTTP(S) 来传输 HTML 数据。
		2:爬虫的设计思路
			1:首先确定需要爬取的网页 URL 地址
			2:通过 HTTP/HTTPS 协议来获取对应的 HTML 页面
			3:提取 HTML 页面里面的数据。
				1:如果是需要的数据，就保存起来
				2:如果是页面里的其他 URL，那就继续执行第二步。

4:为什么选择 Python 做爬虫
	1:可以做爬虫的语言有好多种：PHP、Java、C、C++、Python 等。
		1:PHP
			对多线程、异步支持不好，并发处理能力很弱。
			爬虫是工具性程序，对速度和效率要求比较高。
		2:Java
			Java 的网络爬虫生态圈也很完善，是 Python 爬虫最大的对手，但是 Java 语言本身很笨重，
			代码量很。重构成本比较高，任何修改都会导致代码的大量变动。爬虫经常需要修改部分
			采集代码。
		3:C/C++
			运行效率和性能几乎最强，但是学习成本很高，代码成型比较慢
			能用 C/C++ 做爬虫，只能说是能力的表现，但并不是正确的选择。
		4:Python
			语法优美、代码简洁、开发效率高、支持的模块多、相关的 HTTP 请求模块和 HTML 解析模块
			非常丰富。还有强大的爬虫 Scrapy 框架。以及成熟高效的 Scrapy redis 分布式策略。
			而且调用其他接口也非常方便（胶水语言）。

5:课程介绍
	1:Python 的基本语法知识
	2:如何抓取 HTML 页面
		HTTP 请求的处理：urllib、urllib2、reques
		处理后的请求可以模拟浏览器发送请求，获取服务器响应的文件。
	3:解析响应的内容
		 re、xpath、beautifulSoup4(bs4)、jsonpath、pyquery、
		 使用某种描述性语言来给我们需要的数据定义一个匹配的规则。
		 符合这种规则的数据就会被匹配。
	4:如何采集动态 HTML、验证码的处理
		- 通用的动态页面采集：Selenium + PhantomJS(无界面浏览器)：模拟真是浏览器加载 
		  JS、Ajax 等非静态页面数据。
		- Tesseract：机器学习库，机器图像识别系统，可以处理简单的验证码，复杂的验证码
		  可以通过手动输入或者是专门的打码平台。
	5:Scrapy 框架
		- 两个爬虫框架：Scrapy、Pyspider
		- 高定制性、高性能（异步网络框架twisted），所以数据下载速度非常快、
		  数据下载、提取规则等组件
	6:分布式策略 Scrapy Redis
		- 在 scrapy 基础上添加了一套以 Redis 数据库 为核心的一套组件。
		- 让 Scrapy 框架支持分布式功能，主要在 Redis 里做请求指纹去重、请求分配、数据临时存储。
	7:爬虫、反爬虫、反反爬虫、之间的斗争。
		- 其实爬虫做到最后，最头疼的不是复杂的页面、晦涩的数据，而是网站另一边的运维人员
		- 数据的价值是否值得你去费劲做反爬虫。
		- 机器成本 + 人力成本 > 数据成本。就不反爬虫了，一般做到封 IP 就行了
		- 面子的战争	
		- 爬虫和反爬虫之间的斗争、最后一定是爬虫获胜，为什么？只要是真实用户可以浏览的网页
		  数据，爬虫就一定能爬下来。


1:作用
    数据分析,人工智能
    作为社交软件冷启动
    舆情监控
    竞争对手监控

2:爬虫常用库
    requests
